<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mm.market.product.ProductMapper">
    	<sql id="searcher">
    	<!-- 공통으로 사용하는 sql문 -->
    		<where>
				<choose>
				<when test="kind=='ProductName'">
					productName like concat('%', #{search}, '%')
				</when>
				
				<when test="kind=='ProductContent'">
					productContent like concat('%', #{search}, '%')
				</when>
				
				<otherwise>
					username like concat('%', #{search}, '%')
				</otherwise>
				</choose>
			</where>
    	</sql>


		<select id="getList" resultMap="selectResult" parameterType="Pager">
			SELECT C.*, P.*, PF.* 
			FROM product P LEFT JOIN productFile PF
			ON P.productNum = PF.productNum
			INNER JOIN category C
			ON C.categoryCode = P.categoryCode
			<include refid="searcher"></include>
			ORDER BY P.productNum desc
			limit #{startRow}, 20
		</select>
		
		
		<select id="getCateList" resultMap="selectResult" parameterType="Pager">
			SELECT C.*, P.*, PF.* 
			FROM product P LEFT JOIN productFile PF
			ON P.productNum = PF.productNum
			INNER JOIN category C
			ON C.categoryCode = P.categoryCode
			WHERE C.categoryCode=#{categoryCode}
			
		</select>
		
		
		<select id="getSelect" parameterType="ProductVO" resultMap="selectResult">
			SELECT C.*, P.*, PF.* 
			FROM product P LEFT JOIN productFile PF
			ON P.productNum = PF.productNum
			INNER JOIN category C
			ON C.categoryCode = P.categoryCode
			WHERE P.productNum=#{productNum}
		</select>
		
		<resultMap type="ProductVO" id="selectResult">
			<id property="productNum" column="productNum"></id>
			<result property="productName" column="productName"/>
			<result property="username" column="username"/>
			<result property="categoryCode" column="categoryCode"/>
			<result property="productDate" column="productDate"/>
			<result property="productHit" column="productHit"/>
			<result property="productHeart" column="productHeart"/>
			<result property="productContent" column="productContent"/>
			<result property="productStatus" column="productStatus"/>
			<result property="productPrice" column="productPrice"/>
			<result property="productNego" column="productNego"/>
			<result property="locationCode" column="locationCode"/>
			<collection property="files" javaType="java.util.List" ofType="ProductFileVO">
				<id property="fileNum" column="fileNum"/>
				<result property="fileName" column="fileName"/>
				<result property="originName" column="originName"/>
			</collection>
			<collection property="category" javaType="CategoryVO" ofType="CategoryVO">
				<id property="categoryCode" column="categoryCode"/>
				<result property="categoryName" column="categoryName"/>
			</collection>
		</resultMap> 
		
		<select id="getTotalCount" resultType="Long" parameterType="Pager">
			select count(productNum) from product
		</select>
		
		<update id="setHitUpdate" parameterType="ProductVO">
			UPDATE product SET productHit=productHit+1 WHERE productNum=#{productNum}
		</update>


		<delete id="setDelete" parameterType="ProductVO">
			DELETE FROM product WHERE productNum=#{productNum}
		</delete>

		<insert id="setInsert" parameterType="ProductVO">
			insert into product 
			(productNum, productName, username, categoryCode, productDate, productHit, productHeart, productContent, 
			productPrice, productNego, locationCode)
			 values (#{productNum}, #{productName}, #{username}, #{categoryCode}, NOW(), 0, 0, 
			 #{productContent}, #{productPrice}, 0, 1100000000)
		</insert>
		
		
</mapper>   

