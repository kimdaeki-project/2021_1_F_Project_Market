<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mm.market.chat.ChatMapper">
	
	
	<!-- chatVO 가져오기 -->
	<select id="getVO" parameterType="ChatVO" resultType="ChatVO">
		select num, room, sendUser, recvUser, date_format(sendTime, '%Y.%m.%d %H:%i') sendTime, readTime, content, readChk, productNum 
		from chat where room=#{room}  and (sendUser=#{username} or recvUser=#{username})
	</select>
	
	
	<!-- 메세지 리스트 -->
	<select id="chatList" parameterType="ChatVO" resultType="ChatVO">
		select num, room, sendUser, recvUser, date_format(sendTime, '%Y.%m.%d %H:%i') sendTime, readTime, content, readChk, productNum 
		from chat
		where num in (select max(num) from chat group by room) and (sendUser=#{username} or recvUser=#{username}) 
		order by num desc
	</select>
	

	<!-- list에서 상대방 profile 가져오기 -->
	<select id="getOtherProfile" parameterType="ChatVO" resultType="String">
		select fileName from MemberFile
		<choose>
			<when test="sendUser == username">
				where username = #{recvUser}
			</when>
			<otherwise>
				where username = #{sendUser}
			</otherwise>
		</choose>
	</select>
	
	<!-- 안읽은 메세지 갯수 가져오기 -->
	<select id="countUnread" parameterType="ChatVO" resultType="Int">
		select count(num) from chat
		where recvUser=#{username} and readChk=0 and room=#{room}
	</select>
	
	<!-- 메세지 내용 가져오기 -->
	<select id="roomContentList" parameterType="ChatVO" resultType="ChatVO">
		select C.num, C.room, C.sendUser, C.recvUser, date_format(C.sendTime, '%Y.%m.%d %H:%i') sendTime, C.readTime, C.content, C.readChk, C.productNum, MF.fileName
		from chat C left outer join MemberFile MF
		on C.sendUser = MF.username
		<choose>
			<when test="room != 0">
				where room = #{room}
			</when>
			<otherwise>
				where (recvUser=#{recvUser} and sendUser=#{username} or sendUser=#{sendUser} and recvUser = #{username})
			</otherwise>
		</choose>
		order by num asc
	</select>
	
	<!-- 메세지 읽음 처리 -->
	<update id="chatReadChk" parameterType="ChatVO">
		update chat set readChk=1
		<choose>
			<when test="room !=0">
				where room=#{room} and readChk=0 and recvUser=#{username}
			</when>
			<otherwise>
				where sendUser=#{recvUser} and readChk=0 and recvUser=#{username}
			</otherwise>
		</choose>
	</update>
	
	<!-- 리스트에서 메세지 보내기 -->
	<insert id="chatSendInList" parameterType="ChatVO">
		<choose>
			<when test="room != 0"> 
				insert into chat values(0, #{room}, #{sendUser}, #{recvUser}, now(), now(), #{content}, 0, #{productNum})
			</when>
			<otherwise> <!-- 0이면 상품페이지에서 보낸것 -->
				insert into chat values(0, #{room}, #{sendUser}, #{recvUser}, now(), now(), #{content}, 0, #{productNum})
			</otherwise>
		</choose>
	</insert>
	
	
	<!-- room 번호 최댓값 구하기 -->
	<select id="maxRoom" parameterType="ChatVO" resultType="Int">
		select max(room) from chat
	</select>
	
	<!-- 메세지 이력이 있는지 검색 -->
	<select id="existChat" parameterType="ChatVO" resultType="Int">
		select count(num) from chat
		where (recvUser=#{recvUser} and sendUser=#{sendUser}) or (sendUser=#{recvUser} and recvUser=#{sendUser})
	</select>
	
	<!-- 기존 메세지 내역의 room 번호를 가져옴 -->
	<select id="selectRoom" parameterType="ChatVO" resultType="String">
		select room from chat
		where (recvUser=#{recvUser} and sendUser=#{sendUser}) or (sendUser=#{recvUser} and recvUser=#{sendUser})
		limit 0,1
	</select>
	
</mapper>   

