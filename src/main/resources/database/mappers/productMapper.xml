<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mm.market.product.ProductMapper">
    	<sql id="searcher">
    	<!-- 공통으로 사용하는 sql문 -->
    		<where>
				<choose>
				<when test="kind=='ProductName'">
					productName like concat('%', #{search}, '%')
				</when>
				
				<when test="kind=='ProductContent'">
					productContent like concat('%', #{search}, '%')
				</when>
				
				<otherwise>
					username like concat('%', #{search}, '%')
				</otherwise>
				</choose>
			</where>
    	</sql>


		<select id="getList" resultMap="selectResult" parameterType="Pager">
			SELECT P.*, PF.*
			FROM product P LEFT JOIN productFile PF
			ON P.productNum = PF.productNum
			<include refid="searcher"></include>
			ORDER BY P.productNum desc
			limit #{startRow}, 20
		</select>
		
		<select id="getSelect" parameterType="ProductVO" resultMap="selectResult">
			SELECT P.*, PF.* 
			FROM product P LEFT JOIN productFile PF
			ON P.productNum = PF.productNum
			WHERE P.productNum=#{productNum}
		</select>
		
		<resultMap type="ProductVO" id="selectResult">
			<id column="productNum" property="productNum"/>
			<result column="productName" property="productName"/>
			<result column="username" property="username"/>
			<result column="categoryCode" property="categoryCode"/>
			<result column="productDate" property="productDate"/>
			<result column="productHit" property="productHit"/>
			<result column="productHeart" property="productHeart"/>
			<result column="productContent" property="productContent"/>
			<result column="productStatus" property="productStatus"/>
			<result column="productPrice" property="productPrice"/>
			<result column="productNego" property="productNego"/>
			<result column="locationCode" property="locationCode"/>
			<collection property="files" javaType="java.util.List" ofType="ProductFileVO">
				<id column="fileNum" property="fileNum"/>
				<result column="fileName" property="fileName"/>
				<result column="originName" property="originName"/>
			</collection>
		</resultMap>
			
			
		<select id="getProductNum" resultType="java.lang.Long">
			SELECT LAST_INSERT_ID();
		</select>
		
		<select id="getTotalCount" resultType="Long" parameterType="Pager">
			select count(productNum) from product
		</select>
		
		<update id="setHitUpdate" parameterType="ProductVO">
			UPDATE product SET productHit=productHit+1 WHERE productNum=#{productNum}
		</update>


		<delete id="setDelete" parameterType="ProductVO">
			DELETE FROM product WHERE productNum=#{productNum}
		</delete>

		<insert id="setInsert" parameterType="ProductVO" useGeneratedKeys="true" keyProperty="productNum">
			insert into product 
			(productNum, productName, username, categoryCode, productDate, productHit, productHeart, productContent, productPrice, productNego, locationCode)
			 values (#{productNum}, #{productName}, #{username}, #{categoryCode}, NOW(), 0, 0, #{productContent}, #{productPrice}, 0, 1100000000)
		</insert>
		
		<insert id="setFileInsert" parameterType="ProductFileVO">
			insert into productFile (productNum, fileName, originName)
			values (#{productNum}, #{fileName}, #{originName})
		</insert>
		
		<delete id="setFileDelete" parameterType="ProductFileVO">
			delete productFile where fileNum=#{fileNum}
		</delete>
		
		<update id="setUpdate" parameterType="ProductVO">
			update product set
			productName=#{productName}, 
			categoryCode=#{categoryCode}, 
			productContent=#{productContent}, 
			productPrice=#{productPrice}
			where productNum=#{productNum}
		</update>
		
		
</mapper>   

