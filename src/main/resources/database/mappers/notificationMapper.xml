<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mm.market.notification.NotificationMapper">

	<!-- 알림 리스트 -->
	<select id="notiList" parameterType="NotificationPager" resultMap="list">
		select N.notiNum, N.notiSendUser, N.notiRecvUser, date_format(N.notiSendTime, '%Y.%m.%d %H:%i') notiSendTime, N.notiContent, N.notiReadChk, N.productNum, N.notiFrom, P.* 
		from notification N left join product P
		on N.productNum = P.productNum
		where N.notiRecvUser=#{notiRecvUser}
		order by N.notiNum desc
		limit #{startRow}, #{perPage}
	</select>
	
	
	<select id="getTotalCount" parameterType="NotificationPager" resultType="Long">
		select count(notiNum) from notification
		where notiRecvUser=#{notiRecvUser}
	</select>
		
	<resultMap type="NotificationVO" id="list">
		<id property="notiNum" column="notiNum"/>
		<result property="notiSendUser" column="notiSendUser"/>
		<result property="notiRecvUser" column="notiRecvUser"/>
		<result property="notiSendTime" column="notiSendTime"/>
		<result property="notiContent" column="notiContent"/>
		<result property="notiReadChk" column="notiReadChk"/>
		<result property="productNum" column="productNum"/>
		<association property="product" javaType="ProductVO">
			<id property="productNum" column="productNum"/>
			<result property="productName" column="productName"/>
			<result property="categoryCode" column="categoryCode"/>
			<result property="productNego" column="productNego"/>
		</association>
	</resultMap>
	
	<!-- 알림 선택하기 -->
	<select id="notiSelect" parameterType="NotificationVO" resultMap="list">
		select N.notiNum, N.notiSendUser, N.notiRecvUser, date_format(N.notiSendTime, '%Y.%m.%d %H:%i') notiSendTime, N.notiContent, N.notiReadChk, N.productNum, N.notiFrom, P.* 
		from notification N left join product P
		on N.productNum = P.productNum
		where N.productNum=#{productNum}
	</select>
	
	<!-- 안읽은 알림 갯수 가져오기 -->
	<select id="countUnread" parameterType="NotificationVO" resultType="Int">
		select count(notiNum) from notification
		where notiRecvUser=#{notiRecvUser} and notiReadChk=1
	</select>
	
	<!-- 알림 읽음 처리 -->
	<update id="notiReadChk" parameterType="NotificationVO">
		update notification set notiReadChk=0
		where notiNum=#{notiNum}
	</update>
	
	<!-- 알림 보내기 -->
	<insert id="notiInsert" parameterType="NotificationVO">
		insert into notification values(0, #{notiSendUser}, #{notiRecvUser}, now(), #{notiContent}, 1, #{productNum}, 0)	
	</insert>
	
	<!-- 알림 삭제 -->
	<delete id="notiDelete" parameterType="NotificationVO">
		delete from notification where notiNum = #{notiNum}
	</delete>
	
</mapper>   

