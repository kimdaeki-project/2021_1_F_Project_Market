<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mm.market.comment.CommentMapper">

	<!-- 댓글 list -->
	<select id="getList" parameterType="CommentVO" resultMap="selectResult">
		select C.*, M.*, MF.*
		from comment C
		inner join member M
		on C.username = M.username
		inner join memberFile MF
		on C.username = MF.username
		where socialNum=#{socialNum} 
		order by ref desc
	</select>
	
	<resultMap type="CommentVO" id="selectResult">
		<id property="commentNum" column="commentNum"/>
		<result property="socialNum" column="socialNum"/>
		<result property="username" column="username"/>
		<result property="commentDate" column="commentDate"/>
		<result property="commentContent" column="commentContent"/>
		<result property="ref" column="ref"/>
		<result property="step" column="step"/>
		<result property="depth" column="depth"/>
		<association property="writer" javaType="MemberVO">
			<id property="username" column="username" />
			<result property="name" column="name" />
			<result property="code" column="code"/>			
		</association>
		<association property="writerFile" javaType="MemberFileVO">
			<id property="fileNum" column="fileNum" />
			<result property="username" column="username"/>
			<result property="fileName" column="fileName"/>
		</association>
	</resultMap>

	<!-- 댓글 select -->
	<select id="getSelect" parameterType="CommentVO" resultType="CommentVO">
		select * from comment where commentNum=#{commentNum}
	</select>

	<!-- 댓글 insert -->
	<insert id="setInsert" parameterType="CommentVO" useGeneratedKeys="true" keyProperty="commentNum">
		insert into comment (socialNum, commentContent, username, commentDate)
		values (#{socialNum}, #{commentContent}, #{username}, now())
	</insert>
	
	<update id="setRef">
		update comment set ref=last_insert_id() where commentNum=last_insert_id()
	</update>
	
	<!-- 댓글 update -->
	<update id="setUpdate" parameterType="CommentVO">
		update comment set commentContent=#{commentContent}, commentDate=now()
		where commentNum=#{commentNum}
	</update>

	<!-- 댓글 delete -->
	<delete id="setDelete" parameterType="CommentVO">
		delete from comment where commentNum=#{commentNum}
	</delete>

	<!-- 댓글 setReply -->
	<insert id="setReply" parameterType="CommentVO">
		insert into comment (socialNum, commentContent, username, ref, step, depth, commentDate) 
		values (#{socialNum}, #{commentContent}, #{username}, #{ref}, #{step}, #{depth}, now())
	</insert>

	<!-- 댓글 setReplyUpdate -->
	<update id="setReplyUpdate" parameterType="CommentVO">
		update comment set step=step+1 where ref=#{ref} and step>#{step}
	</update>

</mapper>
